{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/rongalivamsi/Desktop/tejapro/src/lib/utils.ts"],"sourcesContent":["import clsx from \"clsx\"; // âœ…\n\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;;AAAA,+QAAyB,IAAI;AAE7B;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,IAAA,4LAAO,EAAC,IAAA,sKAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/rongalivamsi/Desktop/tejapro/src/components/focus-cards.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.memo(({ card, index, hovered, setHovered }) => (\n  <div\n    onMouseEnter={() => setHovered(index)}\n    onMouseLeave={() => setHovered(null)}\n    className={cn(\n      \" rounded-lg relative top-30 bg-gray-100 dark:bg-neutral-900 overflow-hidden h-60 md:h-96 w-full transition-all duration-300 ease-out\",\n      hovered !== null && hovered !== index && \"blur-sm scale-[0.98]\"\n    )}\n  >\n    <div className=\"absolute inset-0 w-full h-full\">\n      <img\n        src={card.src}\n        alt={card.title}\n        className=\"object-contain w-full h-full\"\n      />\n    </div>\n    <div\n      className={cn(\n        \"absolute inset-0 bg-black/50 flex items-end py-8 px-4 transition-opacity duration-300\",\n        hovered === index ? \"opacity-100\" : \"opacity-0\"\n      )}\n    >\n      <div className=\"text-xl font-medium text-transparent bg-clip-text bg-gradient-to-b from-neutral-50 to-neutral-200 md:text-2xl\">\n        {card.title}\n      </div>\n    </div>\n  </div>\n));\n\nCard.displayName = \"Card\";\n\nfunction FocusCards({ cards }) {\n  const [hovered, setHovered] = useState(null);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [filteredCards, setFilteredCards] = useState(cards);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (!searchValue.trim()) {\n      setFilteredCards(cards);\n      return;\n    }\n    const num = parseInt(searchValue, 10);\n    if (!isNaN(num) && num >= 1 && num <= cards.length) {\n      setFilteredCards([cards[num - 1]]);\n    } else {\n      setFilteredCards([]);\n    }\n  };\n\n  // Reset filteredCards if cards prop changes\n  React.useEffect(() => {\n    setFilteredCards(cards);\n  }, [cards]);\n\n  return (\n    <div className=\"relative mx-auto px-8 w-full max-w-5xl\">\n      {/* Search bar at top right */}\n      <form\n        onSubmit={handleSearch}\n        className=\"z-10 absolute right-[3%] top-4 right-4 right-8 right-12 top-25 flex items-center gap-2 mt-2 sm:absolute md:absolute lg:absolute\"\n      >\n        <input\n          type=\"number\"\n          min={1}\n          max={cards.length}\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder={`Image # (1-${cards.length})`}\n          className=\"px-3 py-2 w-32 text-black bg-white border-gray-300 border dark:border-neutral-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-400 dark:bg-neutral-900 dark:text-white\"\n        />\n        <button\n          type=\"submit\"\n          className=\"px-3 py-2 text-white bg-blue-600 rounded hover:bg-blue-700 transition\"\n        >\n          Search\n        </button>\n        <button\n          type=\"button\"\n          className=\"px-2 py-2 text-gray-700 bg-gray-200 dark:bg-neutral-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-neutral-700 transition\"\n          onClick={() => {\n            setSearchValue(\"\");\n            setFilteredCards(cards);\n          }}\n        >\n          Reset\n        </button>\n      </form>\n      <div className=\"grid grid-cols-1 gap-10 pt-16 w-full md:grid-cols-3\">\n        {filteredCards.length === 0 ? (\n          <div className=\"col-span-full text-center text-red-500 text-lg\">\n            No image found for this number.\n          </div>\n        ) : (\n          filteredCards.map((card, index) => (\n            <Card\n              key={card.title}\n              card={card}\n              index={cards.indexOf(card)}\n              hovered={hovered}\n              setHovered={setHovered}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FocusCards;\n"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAIA,MAAM,qBAAO,sOAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,iBAC3D,oQAAC;QACC,cAAc,IAAM,WAAW;QAC/B,cAAc,IAAM,WAAW;QAC/B,WAAW,IAAA,+IAAE,EACX,wIACA,YAAY,QAAQ,YAAY,SAAS;;0BAG3C,oQAAC;gBAAI,WAAU;0BACb,cAAA,oQAAC;oBACC,KAAK,KAAK,GAAG;oBACb,KAAK,KAAK,KAAK;oBACf,WAAU;;;;;;;;;;;0BAGd,oQAAC;gBACC,WAAW,IAAA,+IAAE,EACX,yFACA,YAAY,QAAQ,gBAAgB;0BAGtC,cAAA,oQAAC;oBAAI,WAAU;8BACZ,KAAK,KAAK;;;;;;;;;;;;;;;;;AAMnB,KAAK,WAAW,GAAG;AAEnB,SAAS,WAAW,EAAE,KAAK,EAAE;IAC3B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,uOAAQ,EAAC;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,uOAAQ,EAAC;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,uOAAQ,EAAC;IAEnD,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,YAAY,IAAI,IAAI;YACvB,iBAAiB;YACjB;QACF;QACA,MAAM,MAAM,SAAS,aAAa;QAClC,IAAI,CAAC,MAAM,QAAQ,OAAO,KAAK,OAAO,MAAM,MAAM,EAAE;YAClD,iBAAiB;gBAAC,KAAK,CAAC,MAAM,EAAE;aAAC;QACnC,OAAO;YACL,iBAAiB,EAAE;QACrB;IACF;IAEA,4CAA4C;IAC5C,sOAAK,CAAC,SAAS,CAAC;QACd,iBAAiB;IACnB,GAAG;QAAC;KAAM;IAEV,qBACE,oQAAC;QAAI,WAAU;;0BAEb,oQAAC;gBACC,UAAU;gBACV,WAAU;;kCAEV,oQAAC;wBACC,MAAK;wBACL,KAAK;wBACL,KAAK,MAAM,MAAM;wBACjB,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,aAAa,CAAC,WAAW,EAAE,MAAM,MAAM,CAAC,CAAC,CAAC;wBAC1C,WAAU;;;;;;kCAEZ,oQAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;kCAGD,oQAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS;4BACP,eAAe;4BACf,iBAAiB;wBACnB;kCACD;;;;;;;;;;;;0BAIH,oQAAC;gBAAI,WAAU;0BACZ,cAAc,MAAM,KAAK,kBACxB,oQAAC;oBAAI,WAAU;8BAAiD;;;;;2BAIhE,cAAc,GAAG,CAAC,CAAC,MAAM,sBACvB,oQAAC;wBAEC,MAAM;wBACN,OAAO,MAAM,OAAO,CAAC;wBACrB,SAAS;wBACT,YAAY;uBAJP,KAAK,KAAK;;;;;;;;;;;;;;;;AAW7B;uCAEe","debugId":null}}]
}